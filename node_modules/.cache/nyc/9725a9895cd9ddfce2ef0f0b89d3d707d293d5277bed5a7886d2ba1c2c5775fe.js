var cov_8lt7zrvw2=function(){var path="/home/wasif/projects/file-clipper/src/transform.js";var hash="f719c41e2be501cf39b8cca48d118a1f0e665b55";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/wasif/projects/file-clipper/src/transform.js",statementMap:{"0":{start:{line:1,column:22},end:{line:1,column:39}},"1":{start:{line:14,column:4},end:{line:14,column:16}},"2":{start:{line:15,column:4},end:{line:15,column:29}},"3":{start:{line:16,column:4},end:{line:16,column:26}},"4":{start:{line:27,column:4},end:{line:30,column:5}},"5":{start:{line:28,column:6},end:{line:28,column:31}},"6":{start:{line:29,column:6},end:{line:29,column:27}},"7":{start:{line:31,column:4},end:{line:31,column:21}},"8":{start:{line:32,column:4},end:{line:32,column:9}},"9":{start:{line:36,column:0},end:{line:36,column:38}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:2},end:{line:13,column:3}},loc:{start:{line:13,column:30},end:{line:17,column:3}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:2},end:{line:26,column:3}},loc:{start:{line:26,column:34},end:{line:33,column:3}},line:26}},branchMap:{"0":{loc:{start:{line:27,column:4},end:{line:30,column:5}},type:"if",locations:[{start:{line:27,column:4},end:{line:30,column:5}},{start:{line:27,column:4},end:{line:30,column:5}}],line:27}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"f719c41e2be501cf39b8cca48d118a1f0e665b55"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Transform}=(cov_8lt7zrvw2.s[0]++,require('stream'));/**
 *
 */class FileClipperTransform extends Transform{/**
   *
   * @param initVect
   * @param opts
   */constructor(initVect,opts){cov_8lt7zrvw2.f[0]++;cov_8lt7zrvw2.s[1]++;super(opts);cov_8lt7zrvw2.s[2]++;this.initVect=initVect;cov_8lt7zrvw2.s[3]++;this.appended=false;}/**
   *
   * @param chunk
   * @param encoding
   * @param cb
   * @private
   */_transform(chunk,encoding,cb){cov_8lt7zrvw2.f[1]++;cov_8lt7zrvw2.s[4]++;if(!this.appended){cov_8lt7zrvw2.b[0][0]++;cov_8lt7zrvw2.s[5]++;this.push(this.initVect);cov_8lt7zrvw2.s[6]++;this.appended=true;}else{cov_8lt7zrvw2.b[0][1]++;}cov_8lt7zrvw2.s[7]++;this.push(chunk);cov_8lt7zrvw2.s[8]++;cb();}}cov_8lt7zrvw2.s[9]++;module.exports=FileClipperTransform;